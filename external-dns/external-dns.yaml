#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: tanzu-system-ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
  - apiGroups: ['']
    resources: ['endpoints', 'pods', 'services']
    verbs: ['get', 'watch', 'list']
  - apiGroups: ['extensions']
    resources: ['ingresses']
    verbs: ['get', 'watch', 'list']
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get","watch","list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: tanzu-system-ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: tanzu-system-ingress
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: k8s.gcr.io/external-dns/external-dns:v0.7.1
        args:
        - --source=service
        - --source=ingress
        - #@ "--domain-filter=" + str(data.values.ingress.domain)
        - --provider=aws
        - --aws-zone-type=public # Looks only at public hosted zones. Valid values are public, private, or no value for both.
        - --aws-prefer-cname
        - --policy=upsert-only
        - --txt-prefix=txt 
        - #@ "--txt-owner-id=" + str(data.values.aws.zoneId)  
        - --registry=txt
        env:
         - name: AWS_ACCESS_KEY_ID
           valueFrom:
             secretKeyRef:
               name: route53-credentials
               key: aws_access_key_id
         - name: AWS_SECRET_ACCESS_KEY
           valueFrom:
             secretKeyRef:
               name: route53-credentials
               key: aws_secret_access_key
---
apiVersion: v1
kind: Secret
metadata:
  name: route53-credentials
  namespace: tanzu-system-ingress
stringData:
  aws_access_key_id: #@ base64.encode(data.values.aws.credentials.accessKey)
  aws_secret_access_key: #@ base64.encode(data.values.aws.credentials.secretKey)
